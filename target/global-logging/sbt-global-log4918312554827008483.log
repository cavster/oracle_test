[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.9.1 (AdoptOpenJDK Java 1.8.0_292)[0m
[0m[[0m[33mwarn[0m] [0m[0msbt version mismatch, using: 1.9.1, in build.properties: "1.7.2", use 'reboot' to use the new value.[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.loadUnit: plugins took 46.102875ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.loadUnit: defsScala took 0.0085ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/colmm/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/colmm/.sbt/1.0/plugins, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 4.868166 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                  Load.resolveProject(global-plugins) took 5.508792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/colmm/.sbt/1.0/plugins, plugins: List(<none>))) took 12.0ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/colmm/.sbt/1.0/plugins, returning: (global-plugins)[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.loadUnit: loadedProjectsRaw took 15.943083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.loadUnit: cleanEvalClasses took 0.013959ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                            Load.loadUnit(file:/Users/colmm/.sbt/1.0/plugins/, ...) took 63.369292ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: load took 70.674542ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: resolveProjects took 0.979541ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: finalTransforms took 17.641375ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: config.delegates took 3.684125ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: Def.make(settings)... took 155.011417ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: structureIndex took 34.109792ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                          Load.apply: mkStreams took 0.0075ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /Users/colmm/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m                        Load.defaultLoad until apply took 669.420917ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                  Load.loadUnit: plugins took 30.840542ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                  Load.loadUnit: defsScala took 0.002583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/colmm/Projects/Oracle/project[0m
[0m[[0m[0mdebug[0m] [0m[0m                                    Load.loadUnit: mkEval took 0.671583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/colmm/Projects/Oracle/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))[0m
[0m[[0m[0mdebug[0m] [0m[0mClause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 3.176625 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project oracle-build from plugins.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m                                      Load.resolveProject(oracle-build) took 9.095625ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                    Load.loadTransitive: finalizeProject(Project(id oracle-build, base: /Users/colmm/Projects/Oracle/project, plugins: List(<none>))) took 15.179ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/colmm/Projects/Oracle/project, returning: (oracle-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m                                  Load.loadUnit: loadedProjectsRaw took 66.27275ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                  Load.loadUnit: cleanEvalClasses took 3.609875ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                                Load.loadUnit(file:/Users/colmm/Projects/Oracle/project/, ...) took 102.557666ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: load took 105.690208ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: resolveProjects took 0.82375ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: finalTransforms took 17.911417ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: config.delegates took 1.269583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: Def.make(settings)... took 116.972417ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: structureIndex took 18.304083ms[0m
[0m[[0m[0mdebug[0m] [0m[0m                              Load.apply: mkStreams took 0.002041ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /Users/colmm/Projects/Oracle/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[31merror[0m] [0m[0mjava.lang.RuntimeException: found version conflict(s) in library dependencies; some are suspected to be binary incompatible:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m	* org.scala-lang.modules:scala-xml_2.12:2.1.0 (early-semver) is selected over {1.2.0, 1.1.1}[0m
[0m[[0m[31merror[0m] [0m[0m	    +- org.scala-lang:scala-compiler:2.12.18              (depends on 2.1.0)[0m
[0m[[0m[31merror[0m] [0m[0m	    +- com.typesafe.sbt:sbt-native-packager:1.5.2 (scalaVersion=2.12, sbtVersion=1.0) (depends on 1.1.1)[0m
[0m[[0m[31merror[0m] [0m[0m	    +- com.typesafe.play:twirl-api_2.12:1.5.1             (depends on 1.2.0)[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mthis can be overridden using libraryDependencySchemes or evictionErrorLevel[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.sys.package$.error(package.scala:30)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.resolve$1(LibraryManagement.scala:90)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$12(LibraryManagement.scala:134)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.util.Tracked$.$anonfun$lastOutput$1(Tracked.scala:74)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$20(LibraryManagement.scala:147)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.util.control.Exception$Catch.apply(Exception.scala:228)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$11(LibraryManagement.scala:147)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.$anonfun$cachedUpdate$11$adapted(LibraryManagement.scala:128)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.util.Tracked$.$anonfun$inputChangedW$1(Tracked.scala:220)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.LibraryManagement$.cachedUpdate(LibraryManagement.scala:161)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Classpaths$.$anonfun$updateTask0$1(Defaults.scala:3799)[0m
[0m[[0m[31merror[0m] [0m[0m	at scala.Function1.$anonfun$compose$1(Function1.scala:49)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:63)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.std.Transform$$anon$4.work(Transform.scala:69)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Execute.$anonfun$submit$2(Execute.scala:283)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:24)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Execute.work(Execute.scala:292)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.Execute.$anonfun$submit$1(Execute.scala:283)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)[0m
[0m[[0m[31merror[0m] [0m[0m	at sbt.CompletionService$$anon$2.call(CompletionService.scala:65)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)[0m
[0m[[0m[31merror[0m] [0m[0m	at java.lang.Thread.run(Thread.java:748)[0m
[0m[[0m[31merror[0m] [0m[0m([31mupdate[0m) found version conflict(s) in library dependencies; some are suspected to be binary incompatible:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m	* org.scala-lang.modules:scala-xml_2.12:2.1.0 (early-semver) is selected over {1.2.0, 1.1.1}[0m
[0m[[0m[31merror[0m] [0m[0m	    +- org.scala-lang:scala-compiler:2.12.18              (depends on 2.1.0)[0m
[0m[[0m[31merror[0m] [0m[0m	    +- com.typesafe.sbt:sbt-native-packager:1.5.2 (scalaVersion=2.12, sbtVersion=1.0) (depends on 1.1.1)[0m
[0m[[0m[31merror[0m] [0m[0m	    +- com.typesafe.play:twirl-api_2.12:1.5.1             (depends on 1.2.0)[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mthis can be overridden using libraryDependencySchemes or evictionErrorLevel[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadFailed, None, None)[0m
[0m[[0m[33mwarn[0m] [0m[0mProject loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)[0m
